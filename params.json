{"name":"Trevor L. McDonell","tagline":"Lambda scientist, physicist at heart. Cyclist. Coffee enthusiast.","body":"### About Me\r\n\r\nI am currently a Postdoctoral Researcher at the [School of Informatics and Computing](http://www.soic.indiana.edu/) and the [Center for Research in Extreme Scale Technologies](https://www.crest.iu.edu/) at [Indiana University Bloomington, USA](http://iu.edu/). My interests include parallel programming (in particular, data parallelism), functional programming languages, and using graphics processors and other compute accelerators.\r\n\r\nI completed my PhD with the [Programming Languages and Systems](http://www.cse.unsw.edu.au/~pls/PLS/PLS.html) group in the [School of Computer Science and Engineering](http://www.cse.unsw.edu.au/) at the [University of New South Wales, Australia](http://www.unsw.edu.au/).\r\n\r\nI was previously a student at the [University of Sydney, Australia](http://www.usyd.edu.au/), where I studied Mechatronics (Space) at the [Australian Centre for Field Robotics (ACFR)](http://www.acfr.usyd.edu.au/) (with honours) together with Physics and Computational Science at the [School of Physics](http://www.physics.usyd.edu.au/). I also had a brief encounter with [ViSLAB](http://www.vislab.net/) and the [Centre for Quantum Computer Technology (CQCT)](http://www.cqc2t.org/) during this time.\r\n\r\nAfter graduating, I held a brief internship at the [Andøya Rocket Range](http://www.rocketrange.no/) (Andøya, Norway). Before returning to academia, I worked as a software engineer for [Canon Information Systems Research Australia (CiSRA)](http://cisra.com.au/) (Sydney, Australia). I also took some time out of my PhD to intern at the [National Institute of Informatics (NII)](http://www.nii.ac.jp/) (Tokyo, Japan) as well as the compilers group of [NVIDIA](http://www.nvidia.com/page/home.html) (Seattle, USA).\r\n\r\nI spend most of my time implementing [Functional Programming Languages](http://www.cs.nott.ac.uk/~pszgmh/faq.html), which I use to program [CUDA](http://www.nvidia.com/object/cuda_home_new.html) graphics cards for general purpose computations ([GPGPU](http://gpgpu.org/)).\r\n\r\nI am a regular at [FP-Syd](http://fp-syd.ouroborus.net/).\r\n\r\nI have been spotted at [various](http://www.bicyclenetwork.com.au/general/great-rides/20005/) [cycling](http://selfpropelled.com.au/event/mont-24/) [events](http://www.gongride.org.au/).\r\n\r\nWhen not doing the above I (occasionally) practice [martial arts](https://www.facebook.com/MizongKungFu).\r\n\r\n\r\n### Publications\r\n\r\n * Type-safe Runtime Code Generation: Accelerate to LLVM ([slides](https://speakerdeck.com/tmcdonell/type-safe-runtime-code-generation-accelerate-to-llvm)) ([video](https://www.youtube.com/watch?v=snXhXA5noVc)).\r\n   [Haskell Symposium 2015](https://www.haskell.org/haskell-symposium/2015/),\r\n   with Manuel M. T. Chakravarty, Vinod Grover, and Ryan R. Newton\r\n\r\n * Converting Data-Parallelism to Task-Parallelism by Rewrites.\r\n   [FHPC 2015](https://sites.google.com/site/fhpcworkshops/),\r\n   with Bo Joel Svensson, Michael Vollmer, Eric Holk, and Ryan R. Newton\r\n\r\n * Optimising Purely Functional GPU Programs.\r\n   PhD Thesis, submitted July 2014\r\n\r\n * Embedding Foreign Code.\r\n   [PADL 2014](http://www.ist.unomaha.edu/padl2014/),\r\n   with Robert Clifton-Everest, Manuel M. T. Chakravarty, and Gabriele Keller\r\n\r\n * Optimising Purely Functional GPU Programs ([slides](https://speakerdeck.com/tmcdonell/optimising-purely-functional-gpu-programs)).\r\n   [ICFP 2013](http://icfpconference.org/icfp2013),\r\n   with Manuel M. T. Chakravarty, Gabrielle Keller, and Ben Lippmeier\r\n\r\n * Accelerating Haskell Array Codes with Multicore GPUs.\r\n   [DAMP 2011](http://damp2011.cs.uchicago.edu/),\r\n   with Manuel M. T. Chakravarty, Gabriele Keller, Sean Lee, and Vinod Grover\r\n\r\n * Scalable Computer Vision Applications.\r\n   [NVIDIA GPU Technology Conference 2010](http://www.gputechconf.com/page/home.html) ([poster session](http://www.gputechconf.com/gtcnew/on-demand-gtc.php?searchByKeyword=&searchItems=&sessionTopic=&sessionEvent=2&sessionYear=2010&sessionFormat=5&submit=&select=+#593)),\r\n   with Rami Mukhtar and Ben Lever\r\n\r\n * Colour correcting foreground colours for visual quality improvement, US Patent US8644602B2\r\n   with Yu-Ling Chen\r\n\r\n * Object extraction in colour compound documents, US Patent US8351691B2 / Refining text extraction in colour compound documents, AU Patent 2008260018\r\n   with Yi-Ling Chen and Ping Liu\r\n\r\n * NH3 on Si(001): Can Gaussian cluster and planewave slab models agree on energetics?\r\n   [Surface Science, 601, 14 (2007)](http://dx.doi.org/10.1016/j.susc.2007.05.017),\r\n   with Oliver Warschkow and Nigel A. Marks\r\n\r\n * Molecular Dissociation of group-V hydrides on Si(001)\r\n   [Phys. Rev. B, 72, 193307 (2005)](http://dx.doi.org/10.1103/PhysRevB.72.193307),\r\n   with Nigel A. Marks, Oliver Warschkow, H. F. Wilson, P. V. Smith and M. W. Radny\r\n\r\n### Projects\r\n\r\n#### Accelerate\r\n\r\n`Data.Array.Accelerate` defines an embedded language of array computations for high performance computing in Haskell. Computations on multi-dimensional, dense, regular arrays are expressed in the form of parameterised collective operations, such as maps, reductions, and permutations. These computations may be online compiled and executed on a range of architectures, such as GPUs.\r\n\r\n * [Hackage](http://hackage.haskell.org/package/accelerate)\r\n * [GitHub](https://github.com/AccelerateHS) repository including [issue tracker](https://github.com/AccelerateHS/accelerate/issues) and [wiki](https://github.com/AccelerateHS/accelerate/wiki).\r\n\r\n\r\n### Teaching\r\n\r\n * 2013: [COMP1911: Computing 1A](http://www.cse.unsw.edu.au/~cs1911/) (tutor)\r\n * 2012: [COMP4181: Language-Based Software Safety](http://www.cse.unsw.edu.au/~cs4181/) (guest lecturer) (slides)\r\n * 2012: [COMP1917: Computing 1](http://www.cse.unsw.edu.au/~cs1917/) (tutor)\r\n * 2012: [COMP1911: Computing 1A](http://www.cse.unsw.edu.au/~cs1911/) (tutor)\r\n * 2011: [COMP3141: Software System Design and Implementation](http://www.cse.unsw.edu.au/~cs3141/) (course admin)\r\n * 2010: [COMP4001: Object Oriented Software Development](http://www.cse.unsw.edu.au/~cs4001/) (tutor)\r\n * 2010: [COMP3141: Software System Design and Implementation](http://www.cse.unsw.edu.au/~cs3141/) (tutor)\r\n * 2009: [COMP1911: Computing 1A](http://www.cse.unsw.edu.au/~cs1911/) (tutor)","google":"UA-68633942-1","note":"Don't delete this file! It's used internally to help with page regeneration."}